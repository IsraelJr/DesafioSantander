//
//  LoginWorker.swift
//  DesafioSantander
//
//  Created by Israel Alves Santos Junior on 05/07/19.
//  Copyright (c) 2019 Israel Alves Santos Junior. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Alamofire

typealias responseLogin = (_ response: Login) -> ()

class LoginWorker {
    
    let url = "https://bank-app-test.herokuapp.com/api/login"
    let ud  = UserDefaults.standard
    
    func doSomeWork() { }
    
    func saveUserDefault(button: UISwitch, user: UITextField) {

        if !button.isOn {
            user.text = nil
        }

        ud.set(user.text, forKey: "user")
        ud.set(button.isOn, forKey: "saveUser")

    }

    func loadUserDefault() -> String {
        return self.ud.string(forKey: "user") ?? ""
    }
    
    func loadUserDefaultBool() -> Bool {
        return self.ud.bool(forKey: "saveUser")
    }


    func validateLogin(parameters: [String: String], onComplete: @escaping(responseLogin)) {
        
        Alamofire.request(url, method: .post, parameters: parameters, encoding: JSONEncoding.default).responseJSON(completionHandler: {
            response in
            
            switch response.result {
            case .success(_):
                do {
                    let loginResponse = try JSONDecoder().decode(Login.self, from: response.data!)
                    onComplete(loginResponse)
                } catch (let error) {
                    print(error)
                }
            case .failure(let error):
                print(error)
            }
            
        })
    }
    
    
}
