//
//  LoginPresenter.swift
//  DesafioSantander
//
//  Created by Israel Alves Santos Junior on 05/07/19.
//  Copyright (c) 2019 Israel Alves Santos Junior. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum InfoAlert: String {
    case FailureLogin   = "Falha no Login"
    case Info           = "Informação"
    case Attention      = "Atenção"
}

protocol LoginPresentationLogic
{
    func presentSomething(response: Login.Something.Response)
    func dataInitial(dataSwitch: Bool, dataUser: String)
    func showCustomAlert(alertTo: String)
    func login(userData: Login.Something.ViewModel)
}

class LoginPresenter: LoginPresentationLogic
{
  weak var viewController: LoginDisplayLogic?
  
  // MARK: Do something
  
    func presentSomething(response: Login.Something.Response)
    {
//        let viewModel = Login.Something.ViewModel()
//        viewController?.displaySomething(viewModel: viewModel)
    }
    
    func dataInitial(dataSwitch: Bool, dataUser: String) {
        viewController?.initializeDataLogin(switchLogin: dataSwitch, user: dataUser)
    }
    
    func showCustomAlert(alertTo: String) {
        
        var message: UIAlertController! = nil
        var textAlert = ""
        var textTitleAlert = ""
        
        switch alertTo {
        case "buttonLogin":
            textTitleAlert = InfoAlert.FailureLogin.rawValue
            textAlert = "Dados de Login Incorretos."
            
        case "buttonInfo":
            textTitleAlert = InfoAlert.Info.rawValue
            textAlert = "Digite seu E-Mail ou CPF."
            
        default:
            textTitleAlert = InfoAlert.Attention.rawValue
            textAlert = "Acão não identificada!"
        }
        
        message = UIAlertController(title: textTitleAlert, message: textAlert, preferredStyle: .alert)
        
        message!.addAction(UIAlertAction(title: NSLocalizedString("OK", comment: "Default action"), style: .default, handler: { _ in
            NSLog("The \"OK\" alert occured.")}))
        
        viewController?.failure(alertController: message)
    }

    func login(userData: Login.Something.ViewModel){
        print("presenter login é: \(userData.password)")
        viewController?.success(userData: userData)
    }
}
