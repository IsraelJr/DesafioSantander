//
//  StatementPresenter.swift
//  DesafioSantander
//
//  Created by Israel Alves Santos Junior on 05/07/19.
//  Copyright (c) 2019 Israel Alves Santos Junior. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementPresentationLogic
{
    func presentExtract(extract: [StatementModels.StatementList])
    func presenterDataAccountUser(accountUser: Login.UserAccount)
    func customAlertAPI()
}

class StatementPresenter: StatementPresentationLogic
{
  weak var viewController: StatementDisplayLogic?
  
  // MARK: Do something
  
    func presentExtract(extract: [StatementModels.StatementList]) {
        viewController?.displayExtract(value: extract)
    }
    
    
    func presenterDataAccountUser(accountUser: Login.UserAccount){
        viewController?.displayDataAccount(accountUser: accountUser)
    }
    
    func customAlertAPI() {
        let message = UIAlertController(title: "Falha Conexão", message: "Não foi possível conectar ao servidor! Feche o aplicativo e tente novamente.", preferredStyle: .alert)
        
        message.addAction(UIAlertAction(title: NSLocalizedString("OK", comment: "Default action"), style: .default, handler: { _ in
            NSLog("The \"OK\" alert occured.")}))
        
        viewController?.failure(alertController: message)
    }
    
}
