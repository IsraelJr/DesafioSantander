//
//  StatementInteractor.swift
//  DesafioSantander
//
//  Created by Israel Alves Santos Junior on 05/07/19.
//  Copyright (c) 2019 Israel Alves Santos Junior. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol StatementBusinessLogic
{
    func doSomething()
    func validateCoercion(password: String)
}

protocol StatementDataStore
{
  var userAccount: Login.UserAccount? { get set }
}

class StatementInteractor: StatementBusinessLogic, StatementDataStore
{
  var presenter: StatementPresentationLogic?
  var worker = StatementWorker()
    
    var userAccount: Login.UserAccount?
    var statementList: [StatementModels.StatementList] = []
    var balance: Double     = 0.0
    var rateCoercion        = 0.0
    let passwordCoercion    = "1234"
    
  // MARK: Do something
  
    func doSomething()
    {
        loadStatements()
      }
    
    private func loadStatements() {
        
        worker.loadStatements(onComplete: { (StatementModelAPI) in
            
            self.statementList = StatementModelAPI.statementList
            DispatchQueue.main.async {
                self.presenter?.presentExtract(extract: self.statementList)
                self.userAccount?.balance = self.calculateBalance()
                self.getDataAccountUser()
            }
        }) { (error) in
            self.presenter?.customAlertAPI()
        }
    }
    
    private func calculateBalance() -> Double {
        
        for i in 0..<statementList.count {
            balance += statementList[i].value
        }
        return balance - (balance * rateCoercion)
    }
    
    private func getDataAccountUser() {
        if let userAccount = self.userAccount {
            self.presenter?.presenterDataAccountUser(accountUser: userAccount)
        }
    }
    
    func validateCoercion(password: String) {
        if password == passwordCoercion {
            rateCoercion = 0.99
        }
    }
}
